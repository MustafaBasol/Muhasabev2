import { MigrationInterface, QueryRunner } from "typeorm";

export class AddTwoFactorFields1761907332434 implements MigrationInterface {
    name = 'AddTwoFactorFields1761907332434'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "organization_members" DROP CONSTRAINT "FK_organization_members_organizationId"`);
        await queryRunner.query(`ALTER TABLE "organization_members" DROP CONSTRAINT "FK_organization_members_userId"`);
        await queryRunner.query(`ALTER TABLE "invites" DROP CONSTRAINT "FK_invites_organizationId"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_e9682eb7c1839bb55c6b77e5b81"`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" DROP CONSTRAINT "FK_a2c50d3c70519722b5b74febd60"`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" DROP CONSTRAINT "FK_030a71ef0a0292a218408aed44c"`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" DROP CONSTRAINT "FK_fiscal_periods_tenant"`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" DROP CONSTRAINT "FK_fiscal_periods_locked_by"`);
        await queryRunner.query(`ALTER TABLE "expenses" DROP CONSTRAINT "FK_6103e35625584836bed4dab6b92"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_organization_members_userId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_organization_members_organizationId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invites_token"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_tenant_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_email"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_suppliers_tenant_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_products_tenant_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_products_code"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_products_category"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_products_tenant_category"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_product_categories_tenantId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_product_categories_tenant_name"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_customers_tenant_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_customers_email"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_customers_tenant_created"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_tenant_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_customer_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_issue_date"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_due_date"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_tenant_status"`);
        await queryRunner.query(`DROP INDEX "public"."idx_invoices_is_voided"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_invoices_is_voided"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fiscal_periods_tenant_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fiscal_periods_period_dates"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_expenses_tenant_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_expenses_supplier_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_expenses_category"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_expenses_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_expenses_date"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_expenses_tenant_category"`);
        await queryRunner.query(`DROP INDEX "public"."idx_expenses_is_voided"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_expenses_is_voided"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_audit_log_tenant_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_audit_log_user_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_audit_log_entity"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_audit_log_created_at"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_audit_log_entity_composite"`);
        await queryRunner.query(`ALTER TABLE "organization_members" DROP CONSTRAINT "UQ_organization_members_org_user"`);
        await queryRunner.query(`ALTER TABLE "users" ADD "twoFactorSecret" character varying`);
        await queryRunner.query(`ALTER TABLE "users" ADD "twoFactorEnabled" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "users" ADD "backupCodes" text array`);
        await queryRunner.query(`ALTER TABLE "users" ADD "twoFactorEnabledAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TYPE "public"."role_enum" RENAME TO "role_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."organization_members_role_enum" AS ENUM('OWNER', 'ADMIN', 'MEMBER')`);
        await queryRunner.query(`ALTER TABLE "organization_members" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "organization_members" ALTER COLUMN "role" TYPE "public"."organization_members_role_enum" USING "role"::"text"::"public"."organization_members_role_enum"`);
        await queryRunner.query(`ALTER TABLE "organization_members" ALTER COLUMN "role" SET DEFAULT 'MEMBER'`);
        await queryRunner.query(`DROP TYPE "public"."role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "organization_members" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TYPE "public"."role_enum" RENAME TO "role_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."invites_role_enum" AS ENUM('OWNER', 'ADMIN', 'MEMBER')`);
        await queryRunner.query(`ALTER TABLE "invites" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invites" ALTER COLUMN "role" TYPE "public"."invites_role_enum" USING "role"::"text"::"public"."invites_role_enum"`);
        await queryRunner.query(`ALTER TABLE "invites" ALTER COLUMN "role" SET DEFAULT 'MEMBER'`);
        await queryRunner.query(`DROP TYPE "public"."role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "invites" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TYPE "public"."plan_enum" RENAME TO "plan_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."organizations_plan_enum" AS ENUM('STARTER', 'PRO', 'BUSINESS')`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "plan" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "plan" TYPE "public"."organizations_plan_enum" USING "plan"::"text"::"public"."organizations_plan_enum"`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "plan" SET DEFAULT 'STARTER'`);
        await queryRunner.query(`DROP TYPE "public"."plan_enum_old"`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`COMMENT ON COLUMN "products"."categoryTaxRateOverride" IS NULL`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "is_voided" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "expenses" ALTER COLUMN "is_voided" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "action"`);
        await queryRunner.query(`CREATE TYPE "public"."audit_log_action_enum" AS ENUM('CREATE', 'UPDATE', 'DELETE')`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "action" "public"."audit_log_action_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "audit_log" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`CREATE INDEX "IDX_5652c2c6b066835b6c500d0d83" ON "organization_members" ("organizationId") `);
        await queryRunner.query(`CREATE INDEX "IDX_e826222ad017663c6db1a45a4f" ON "organization_members" ("userId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_18a9a6c85f7cc6f42ebef3b318" ON "invites" ("token") `);
        await queryRunner.query(`ALTER TABLE "organization_members" ADD CONSTRAINT "UQ_7c48546e8026fb043d9ad0c2c8c" UNIQUE ("organizationId", "userId")`);
        await queryRunner.query(`ALTER TABLE "organization_members" ADD CONSTRAINT "FK_5652c2c6b066835b6c500d0d83f" FOREIGN KEY ("organizationId") REFERENCES "organizations"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization_members" ADD CONSTRAINT "FK_e826222ad017663c6db1a45a4f1" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invites" ADD CONSTRAINT "FK_9e65b4b3671b77f577afc2a71f1" FOREIGN KEY ("organizationId") REFERENCES "organizations"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "FK_b4287ea594fdd71f5579943dde1" FOREIGN KEY ("currentOrgId") REFERENCES "organizations"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_e9682eb7c1839bb55c6b77e5b81" FOREIGN KEY ("voided_by") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" ADD CONSTRAINT "FK_a2c50d3c70519722b5b74febd60" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" ADD CONSTRAINT "FK_030a71ef0a0292a218408aed44c" FOREIGN KEY ("lockedBy") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "expenses" ADD CONSTRAINT "FK_6103e35625584836bed4dab6b92" FOREIGN KEY ("voided_by") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "expenses" DROP CONSTRAINT "FK_6103e35625584836bed4dab6b92"`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" DROP CONSTRAINT "FK_030a71ef0a0292a218408aed44c"`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" DROP CONSTRAINT "FK_a2c50d3c70519722b5b74febd60"`);
        await queryRunner.query(`ALTER TABLE "invoices" DROP CONSTRAINT "FK_e9682eb7c1839bb55c6b77e5b81"`);
        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "FK_b4287ea594fdd71f5579943dde1"`);
        await queryRunner.query(`ALTER TABLE "invites" DROP CONSTRAINT "FK_9e65b4b3671b77f577afc2a71f1"`);
        await queryRunner.query(`ALTER TABLE "organization_members" DROP CONSTRAINT "FK_e826222ad017663c6db1a45a4f1"`);
        await queryRunner.query(`ALTER TABLE "organization_members" DROP CONSTRAINT "FK_5652c2c6b066835b6c500d0d83f"`);
        await queryRunner.query(`ALTER TABLE "organization_members" DROP CONSTRAINT "UQ_7c48546e8026fb043d9ad0c2c8c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_18a9a6c85f7cc6f42ebef3b318"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e826222ad017663c6db1a45a4f"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5652c2c6b066835b6c500d0d83"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "audit_log" DROP COLUMN "action"`);
        await queryRunner.query(`DROP TYPE "public"."audit_log_action_enum"`);
        await queryRunner.query(`ALTER TABLE "audit_log" ADD "action" character varying(20) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "expenses" ALTER COLUMN "is_voided" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "invoices" ALTER COLUMN "is_voided" DROP NOT NULL`);
        await queryRunner.query(`COMMENT ON COLUMN "products"."categoryTaxRateOverride" IS 'Ürüne özel KDV oranı - Kategorinin varsayılan KDV oranını geçersiz kılar'`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."plan_enum_old" AS ENUM('STARTER', 'PRO', 'BUSINESS')`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "plan" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "plan" TYPE "public"."plan_enum_old" USING "plan"::"text"::"public"."plan_enum_old"`);
        await queryRunner.query(`ALTER TABLE "organizations" ALTER COLUMN "plan" SET DEFAULT 'STARTER'`);
        await queryRunner.query(`DROP TYPE "public"."organizations_plan_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."plan_enum_old" RENAME TO "plan_enum"`);
        await queryRunner.query(`ALTER TABLE "invites" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."role_enum_old" AS ENUM('OWNER', 'ADMIN', 'MEMBER')`);
        await queryRunner.query(`ALTER TABLE "invites" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "invites" ALTER COLUMN "role" TYPE "public"."role_enum_old" USING "role"::"text"::"public"."role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "invites" ALTER COLUMN "role" SET DEFAULT 'MEMBER'`);
        await queryRunner.query(`DROP TYPE "public"."invites_role_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."role_enum_old" RENAME TO "role_enum"`);
        await queryRunner.query(`ALTER TABLE "organization_members" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."role_enum_old" AS ENUM('OWNER', 'ADMIN', 'MEMBER')`);
        await queryRunner.query(`ALTER TABLE "organization_members" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "organization_members" ALTER COLUMN "role" TYPE "public"."role_enum_old" USING "role"::"text"::"public"."role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "organization_members" ALTER COLUMN "role" SET DEFAULT 'MEMBER'`);
        await queryRunner.query(`DROP TYPE "public"."organization_members_role_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."role_enum_old" RENAME TO "role_enum"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "twoFactorEnabledAt"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "backupCodes"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "twoFactorEnabled"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "twoFactorSecret"`);
        await queryRunner.query(`ALTER TABLE "organization_members" ADD CONSTRAINT "UQ_organization_members_org_user" UNIQUE ("organizationId", "userId")`);
        await queryRunner.query(`CREATE INDEX "IDX_audit_log_entity_composite" ON "audit_log" ("entity", "entityId") `);
        await queryRunner.query(`CREATE INDEX "IDX_audit_log_created_at" ON "audit_log" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_audit_log_entity" ON "audit_log" ("entity") `);
        await queryRunner.query(`CREATE INDEX "IDX_audit_log_user_id" ON "audit_log" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_audit_log_tenant_id" ON "audit_log" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_expenses_is_voided" ON "expenses" ("is_voided") `);
        await queryRunner.query(`CREATE INDEX "idx_expenses_is_voided" ON "expenses" ("is_voided") `);
        await queryRunner.query(`CREATE INDEX "IDX_expenses_tenant_category" ON "expenses" ("tenantId", "category") `);
        await queryRunner.query(`CREATE INDEX "IDX_expenses_date" ON "expenses" ("expenseDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_expenses_status" ON "expenses" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_expenses_category" ON "expenses" ("category") `);
        await queryRunner.query(`CREATE INDEX "IDX_expenses_supplier_id" ON "expenses" ("supplierId") `);
        await queryRunner.query(`CREATE INDEX "IDX_expenses_tenant_id" ON "expenses" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_fiscal_periods_period_dates" ON "fiscal_periods" ("tenantId", "periodStart", "periodEnd") `);
        await queryRunner.query(`CREATE INDEX "IDX_fiscal_periods_tenant_id" ON "fiscal_periods" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_is_voided" ON "invoices" ("is_voided") `);
        await queryRunner.query(`CREATE INDEX "idx_invoices_is_voided" ON "invoices" ("is_voided") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_tenant_status" ON "invoices" ("tenantId", "status") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_due_date" ON "invoices" ("dueDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_issue_date" ON "invoices" ("issueDate") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_status" ON "invoices" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_customer_id" ON "invoices" ("customerId") `);
        await queryRunner.query(`CREATE INDEX "IDX_invoices_tenant_id" ON "invoices" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_customers_tenant_created" ON "customers" ("tenantId", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_customers_email" ON "customers" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_customers_tenant_id" ON "customers" ("tenantId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_product_categories_tenant_name" ON "product_categories" ("name", "tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_product_categories_tenantId" ON "product_categories" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_products_tenant_category" ON "products" ("category", "tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_products_category" ON "products" ("category") `);
        await queryRunner.query(`CREATE INDEX "IDX_products_code" ON "products" ("code") `);
        await queryRunner.query(`CREATE INDEX "IDX_products_tenant_id" ON "products" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_suppliers_tenant_id" ON "suppliers" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_email" ON "users" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_tenant_id" ON "users" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_invites_token" ON "invites" ("token") `);
        await queryRunner.query(`CREATE INDEX "IDX_organization_members_organizationId" ON "organization_members" ("organizationId") `);
        await queryRunner.query(`CREATE INDEX "IDX_organization_members_userId" ON "organization_members" ("userId") `);
        await queryRunner.query(`ALTER TABLE "expenses" ADD CONSTRAINT "FK_6103e35625584836bed4dab6b92" FOREIGN KEY ("voided_by") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" ADD CONSTRAINT "FK_fiscal_periods_locked_by" FOREIGN KEY ("lockedBy") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" ADD CONSTRAINT "FK_fiscal_periods_tenant" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" ADD CONSTRAINT "FK_030a71ef0a0292a218408aed44c" FOREIGN KEY ("lockedBy") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "fiscal_periods" ADD CONSTRAINT "FK_a2c50d3c70519722b5b74febd60" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoices" ADD CONSTRAINT "FK_e9682eb7c1839bb55c6b77e5b81" FOREIGN KEY ("voided_by") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invites" ADD CONSTRAINT "FK_invites_organizationId" FOREIGN KEY ("organizationId") REFERENCES "organizations"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization_members" ADD CONSTRAINT "FK_organization_members_userId" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization_members" ADD CONSTRAINT "FK_organization_members_organizationId" FOREIGN KEY ("organizationId") REFERENCES "organizations"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

}
